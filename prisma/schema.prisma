generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  clerkUserId   String    @unique
  email         String    @unique
  name          String?
  imageUrl      String?

  // Store industry as text and also reference IndustryInsight
  industry      String?  // Userâ€™s industry as plain text
  industryId    String?  // Foreign key reference to IndustryInsight
  industryInsight IndustryInsight? @relation(fields: [industryId], references: [id])

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Profile fields
  bio           String?
  experience    Int?      // Years of experience
  
  // Relations
  skills        String[]  
  assessments   Assessment[]
  resume        Resume?
  coverLetter   CoverLetter[]

  @@index([industryId]) // Index but NOT unique
}

model Assessment {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  quizScore     Float
  questions     Json[]
  category      String
  improvementTip String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([userId])
}

model Resume {
  id          String    @id @default(cuid())
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id])
  content     String    @db.Text
  atsScore    Float?
  feedback    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model CoverLetter {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  content         String
  jobDescription  String?
  companyName     String
  jobTitle        String
  status          String    @default("draft")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([userId])
}

// Industry insights with salary and trends
model IndustryInsight {
  id            String    @id @default(cuid())
  industry      String    @unique  
  users         User[]    

  // Salary data
  salaryRanges  Json[]  

  // Industry trends
  growthRate    Float
  demandLevel   String
  topSkills     String[]

  // Market conditions
  marketOutlook String
  keyTrends     String[]

  // Learning suggestions
  recommendedSkills String[]

  lastUpdated   DateTime  @default(now())
  nextUpdate    DateTime

  @@index([industry])
}
